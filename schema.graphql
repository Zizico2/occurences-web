
type Coordinates {
	latitude: Float!
	longitude: Float!
}


enum GroupedStatus {
	ACTIVE
	CONCLUDING
	DISPATCH
	RESOLUTION
}



type Occurence {
	nature: String!
	location: Coordinates!
	groupedStatus: GroupedStatus!
	occurenceStatus: OccurenceStatus!
}

enum OccurenceStatus {
	ACTIVE
	INITIAL_DISPATCH
	CONCLUDING
	RESOLUTION
	MONITORING
	ARRIVAL_ON_SCENE
	DISPATCH
}

type QueryRoot {
	occurences: [Occurence!]!
}


directive @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
schema {
	query: QueryRoot
}
